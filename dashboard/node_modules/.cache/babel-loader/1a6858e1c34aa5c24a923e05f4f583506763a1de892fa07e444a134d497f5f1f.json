{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\React Projects\\\\Dashboard\\\\dashboard\\\\src\\\\components\\\\Sensorstatus.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport Typography from '@mui/material/Typography';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setsensordata } from \"../features/sensordata\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:4000\");\nfunction Sensorstatus() {\n  _s();\n  const dispatch = useDispatch();\n  const sensordata = useSelector(state => state.sensordata.value);\n  const pumpstatus = useSelector(state => state.switchstate.value);\n  const modedata = useSelector(state => state.mode.value);\n  const timerdata = useSelector(state => state.timer.value);\n  useEffect(() => {\n    const handlesensordata = data => {\n      dispatch(setsensordata({\n        OHT_Float: data.OHT_Float,\n        UGT_Float: data.UGT_Float\n      }));\n    };\n    socket.on(\"connected\", handlesensordata);\n    socket.on(\"Sensordata\", handlesensordata);\n    return () => {\n      socket.off(\"connected\", handlesensordata);\n    };\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      children: [\"Overhead Tank Float Switch  is \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: sensordata.OHT_Float === \"ON\" ? \"green\" : \"red\"\n        },\n        children: sensordata.OHT_Float\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      children: [\"Underground Tank Float Switch  is \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: sensordata.UGT_Float === \"ON\" ? \"green\" : \"red\"\n        },\n        children: sensordata.UGT_Float\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 43\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      children: [\"Timer is \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: timerdata.modestate === \"ENABLED\" ? \"red\" : \"green\"\n        },\n        children: timerdata.modestate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      children: [\"Pump is \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: pumpstatus === \"ON\" ? \"red\" : \"green\"\n        },\n        children: pumpstatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      children: [\"Plant Mode is \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: modedata.modestate === \"AUTO\" ? \"red\" : \"green\"\n        },\n        children: modedata.modestate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(Sensorstatus, \"wjqfVA8FQCi55KKjMpbKBEQlvys=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n_c = Sensorstatus;\nexport default Sensorstatus;\nvar _c;\n$RefreshReg$(_c, \"Sensorstatus\");","map":{"version":3,"names":["React","useEffect","Typography","useDispatch","useSelector","setsensordata","io","jsxDEV","_jsxDEV","socket","connect","Sensorstatus","_s","dispatch","sensordata","state","value","pumpstatus","switchstate","modedata","mode","timerdata","timer","handlesensordata","data","OHT_Float","UGT_Float","on","off","children","variant","style","color","fileName","_jsxFileName","lineNumber","columnNumber","modestate","_c","$RefreshReg$"],"sources":["C:/Projects/React Projects/Dashboard/dashboard/src/components/Sensorstatus.js"],"sourcesContent":["import React,{useEffect} from 'react'\r\nimport Typography from '@mui/material/Typography';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {setsensordata} from \"../features/sensordata\"\r\nimport io from \"socket.io-client\";\r\n\r\n\r\nconst socket=io.connect(\"http://localhost:4000\");\r\n\r\nfunction Sensorstatus() {\r\n\r\n  const dispatch = useDispatch();\r\n  const sensordata = useSelector(state => state.sensordata.value);\r\n  const pumpstatus = useSelector(state => state.switchstate.value);\r\n  const modedata = useSelector(state=> state.mode.value);\r\n  const timerdata = useSelector(state=> state.timer.value)\r\n  \r\n  useEffect(() => {\r\n    const handlesensordata = (data) => {\r\n      dispatch(setsensordata({\r\n        OHT_Float:data.OHT_Float,\r\n        UGT_Float:data.UGT_Float\r\n    }))\r\n    };\r\n    socket.on(\"connected\",handlesensordata);\r\n    socket.on(\"Sensordata\",handlesensordata);\r\n\r\n    return ()=>{\r\n      socket.off(\"connected\",handlesensordata);\r\n    }\r\n\r\n  }, [dispatch]); \r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"subtitle1\">\r\n        Overhead Tank Float Switch  is <span style={{color:sensordata.OHT_Float === \"ON\" ? \"green\" : \"red\"}}>{sensordata.OHT_Float}</span> \r\n      </Typography>\r\n      <Typography variant=\"subtitle1\">\r\n        Underground Tank Float Switch  is <span style={{color:sensordata.UGT_Float === \"ON\" ? \"green\" : \"red\"}}>{sensordata.UGT_Float}</span>\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\">\r\n        Timer is <span style={{color:timerdata.modestate === \"ENABLED\" ? \"red\" : \"green\"}}>{timerdata.modestate}</span>\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\">\r\n        Pump is <span style={{color:pumpstatus === \"ON\" ? \"red\" : \"green\"}}>{pumpstatus}</span>\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\">\r\n        Plant Mode is <span style={{color:modedata.modestate === \"AUTO\" ? \"red\" : \"green\"}}>{modedata.modestate}</span>\r\n      </Typography>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sensorstatus;\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}