{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\React Projects\\\\Dashboard\\\\dashboard\\\\src\\\\components\\\\Devicestatus.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport Typography from '@mui/material/Typography';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setstatus } from \"../features/status\";\nimport { setcolor } from '../features/color';\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Devicestatus() {\n  _s();\n  const socket = io.connect(\"http://localhost:4000\");\n  const dispatch = useDispatch();\n  const status = useSelector(state => state.status.value);\n  const color = useSelector(state => state.statuscolor.value);\n  useEffect(() => {\n    const handlestatus = data => {\n      dispatch(setstatus({\n        status: data.device_status\n      }));\n      if (data.device_status === \"Online\") {\n        dispatch(setcolor({\n          statuscolor: \"green\"\n        }));\n      } else {\n        dispatch(setcolor({\n          statuscolor: \"red\"\n        }));\n      }\n    };\n    socket.on(\"connected\", handlestatus);\n    socket.on(\"Device_status\", handlestatus);\n    return () => {\n      socket.off(\"connected\", handlestatus);\n    };\n  }, [socket, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      color: color,\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Devicestatus, \"e3/UE2JL39asrP580McxSXkVOp0=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Devicestatus;\nexport default Devicestatus;\nvar _c;\n$RefreshReg$(_c, \"Devicestatus\");","map":{"version":3,"names":["React","useEffect","Typography","useDispatch","useSelector","setstatus","setcolor","io","jsxDEV","_jsxDEV","Devicestatus","_s","socket","connect","dispatch","status","state","value","color","statuscolor","handlestatus","data","device_status","on","off","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Projects/React Projects/Dashboard/dashboard/src/components/Devicestatus.js"],"sourcesContent":["import React,{useEffect} from 'react'\r\nimport Typography from '@mui/material/Typography';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {setstatus} from \"../features/status\";\r\nimport { setcolor } from '../features/color';\r\nimport io from \"socket.io-client\";\r\n\r\n\r\n\r\n\r\nfunction Devicestatus() {\r\n  \r\n  const socket=io.connect(\"http://localhost:4000\");\r\n\r\n  const dispatch = useDispatch();\r\n  const status = useSelector(state => state.status.value);\r\n  const color = useSelector(state => state.statuscolor.value);\r\n  \r\n  useEffect(()=>{\r\n\r\n    const handlestatus =(data)=>{\r\n      dispatch(setstatus({status:data.device_status})); \r\n      if(data.device_status === \"Online\"){\r\n        dispatch(setcolor({statuscolor:\"green\"}));\r\n      }else{\r\n        dispatch(setcolor({statuscolor:\"red\"}));\r\n      }\r\n    }\r\n\r\n    socket.on(\"connected\",handlestatus);\r\n    socket.on(\"Device_status\",handlestatus);\r\n\r\n    return () => {\r\n      socket.off(\"connected\",handlestatus); \r\n    };\r\n     \r\n  },[socket,dispatch]);\r\n  \r\n  return (\r\n    <div>\r\n      <Typography variant=\"h6\" color={color}>\r\n         {status}\r\n       </Typography>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Devicestatus\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,SAAS,QAAO,OAAO;AACrC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAAQC,SAAS,QAAO,oBAAoB;AAC5C,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,OAAOC,EAAE,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAKlC,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EAEtB,MAAMC,MAAM,GAACL,EAAE,CAACM,OAAO,CAAC,uBAAuB,CAAC;EAEhD,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAMY,MAAM,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACD,MAAM,CAACE,KAAK,CAAC;EACvD,MAAMC,KAAK,GAAGd,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACG,WAAW,CAACF,KAAK,CAAC;EAE3DhB,SAAS,CAAC,MAAI;IAEZ,MAAMmB,YAAY,GAAGC,IAAI,IAAG;MAC1BP,QAAQ,CAACT,SAAS,CAAC;QAACU,MAAM,EAACM,IAAI,CAACC;MAAa,CAAC,CAAC,CAAC;MAChD,IAAGD,IAAI,CAACC,aAAa,KAAK,QAAQ,EAAC;QACjCR,QAAQ,CAACR,QAAQ,CAAC;UAACa,WAAW,EAAC;QAAO,CAAC,CAAC,CAAC;MAC3C,CAAC,MAAI;QACHL,QAAQ,CAACR,QAAQ,CAAC;UAACa,WAAW,EAAC;QAAK,CAAC,CAAC,CAAC;MACzC;IACF,CAAC;IAEDP,MAAM,CAACW,EAAE,CAAC,WAAW,EAACH,YAAY,CAAC;IACnCR,MAAM,CAACW,EAAE,CAAC,eAAe,EAACH,YAAY,CAAC;IAEvC,OAAO,MAAM;MACXR,MAAM,CAACY,GAAG,CAAC,WAAW,EAACJ,YAAY,CAAC;IACtC,CAAC;EAEH,CAAC,EAAC,CAACR,MAAM,EAACE,QAAQ,CAAC,CAAC;EAEpB,oBACEL,OAAA;IAAAgB,QAAA,eACEhB,OAAA,CAACP,UAAU;MAACwB,OAAO,EAAC,IAAI;MAACR,KAAK,EAAEA,KAAM;MAAAO,QAAA,EAClCV;IAAM;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEV;AAACnB,EAAA,CAnCQD,YAAY;EAAA,QAIFP,WAAW,EACbC,WAAW,EACZA,WAAW;AAAA;AAAA2B,EAAA,GANlBrB,YAAY;AAqCrB,eAAeA,YAAY;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}