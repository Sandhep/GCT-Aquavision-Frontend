{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\React Projects\\\\Dashboard\\\\dashboard\\\\src\\\\components\\\\Sensorstatus.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport Typography from '@mui/material/Typography';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Switch from '@mui/material/Switch';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setsensordata } from \"../features/sensordata\";\nimport io from \"socket.io-client\";\nimport mode, { setmode } from \"../features/mode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:4000\");\nfunction Sensorstatus() {\n  _s();\n  const dispatch = useDispatch();\n  const sensordata = useSelector(state => state.sensordata.value);\n  const pumpstatus = useSelector(state => state.switchstate.value);\n  const modedata = useSelector(state => state.mode.value);\n  useEffect(() => {\n    socket.on(\"Sensordata\", data => {\n      dispatch(setsensordata(data));\n    });\n  });\n  const handleChange = Event => {\n    const isChecked = Event.target.checked;\n    dispatch(setmode({\n      mode: isChecked,\n      modestate: isChecked ? \"AUTO\" : \"MANUAL\"\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Switch, {\n        checked: modedata.mode,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this),\n      label: modedata.modestate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      children: [\"Overhead Tank Float Switch  is \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: sensordata.OHT_Float === \"ON\" ? \"green\" : \"red\"\n        },\n        children: sensordata.OHT_Float\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      children: [\"Underground Tank Float Switch  is \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: sensordata.UGT_Float === \"ON\" ? \"green\" : \"red\"\n        },\n        children: sensordata.UGT_Float\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 43\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      children: [\"Pump is \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: pumpstatus === \"ON\" ? \"green\" : \"red\"\n        },\n        children: pumpstatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(Sensorstatus, \"gxcD+QodPiuLB9KYYwQgawFdOiI=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = Sensorstatus;\nexport default Sensorstatus;\nvar _c;\n$RefreshReg$(_c, \"Sensorstatus\");","map":{"version":3,"names":["React","useEffect","Typography","FormControlLabel","Switch","useDispatch","useSelector","setsensordata","io","mode","setmode","jsxDEV","_jsxDEV","socket","connect","Sensorstatus","_s","dispatch","sensordata","state","value","pumpstatus","switchstate","modedata","on","data","handleChange","Event","isChecked","target","checked","modestate","children","control","onChange","fileName","_jsxFileName","lineNumber","columnNumber","label","variant","style","color","OHT_Float","UGT_Float","_c","$RefreshReg$"],"sources":["C:/Projects/React Projects/Dashboard/dashboard/src/components/Sensorstatus.js"],"sourcesContent":["import React,{useEffect} from 'react'\r\nimport Typography from '@mui/material/Typography';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Switch from '@mui/material/Switch';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {setsensordata} from \"../features/sensordata\"\r\nimport io from \"socket.io-client\";\r\nimport mode, {setmode} from \"../features/mode\";\r\n\r\n\r\nconst socket=io.connect(\"http://localhost:4000\");\r\n\r\nfunction Sensorstatus() {\r\n\r\n  const dispatch = useDispatch();\r\n  const sensordata = useSelector(state => state.sensordata.value);\r\n  const pumpstatus = useSelector(state => state.switchstate.value);\r\n  const modedata = useSelector(state=> state.mode.value);\r\n  \r\n  useEffect(()=>{\r\n    socket.on(\"Sensordata\",(data)=>{\r\n        dispatch(setsensordata(data)); \r\n    });\r\n  });\r\n\r\n  const handleChange = (Event) =>{\r\n    const isChecked = Event.target.checked;\r\n    dispatch(setmode({\r\n        mode:isChecked,\r\n        modestate:isChecked ? \"AUTO\" : \"MANUAL\"\r\n    }))\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n       <FormControlLabel\r\n        control={\r\n          <Switch\r\n            checked={modedata.mode}\r\n            onChange={handleChange}\r\n          />\r\n        }\r\n        label={modedata.modestate}\r\n      />\r\n      <Typography variant=\"subtitle1\">\r\n        Overhead Tank Float Switch  is <span style={{color:sensordata.OHT_Float === \"ON\" ? \"green\" : \"red\"}}>{sensordata.OHT_Float}</span> \r\n      </Typography>\r\n      <Typography variant=\"subtitle1\">\r\n        Underground Tank Float Switch  is <span style={{color:sensordata.UGT_Float === \"ON\" ? \"green\" : \"red\"}}>{sensordata.UGT_Float}</span>\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\">\r\n        Pump is <span style={{color:pumpstatus === \"ON\" ? \"green\" : \"red\"}}>{pumpstatus}</span>\r\n      </Typography>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sensorstatus;\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}