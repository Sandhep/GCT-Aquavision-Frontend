{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\React Projects\\\\Dashboard\\\\dashboard\\\\src\\\\components\\\\SwitchCard.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Switch from '@mui/material/Switch';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport axios from \"axios\";\nimport { useDispatch } from 'react-redux';\nimport { toggle } from '../features/switch';\nimport state, { setstate } from '../features/state';\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SwitchCard() {\n  _s();\n  const dispatch = useDispatch();\n  const checked = useSelector(state => state.switch.value);\n  const state = useSelector(state => state.state.value);\n  const [captchaInput, setCaptchaInput] = React.useState('');\n  const [captchaValid, setCaptchaValid] = React.useState(false);\n  const expectedCaptcha = '12345';\n  const handleChange = event => {\n    const isChecked = event.target.checked;\n    dispatch(toggle({\n      checked: isChecked\n    }));\n    const switchstate = isChecked ? \"ON\" : \"OFF\";\n    dispatch(setstate({\n      state: switchstate\n    }));\n    if (captchaValid) {\n      handlechecked(isChecked);\n      if (!isChecked) {\n        setCaptchaValid(false);\n        setCaptchaInput('');\n      }\n    }\n  };\n\n  //Get Request to server\n\n  React.useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/data');\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    const intervalId = setInterval(fetchData, 1000);\n    return () => clearInterval(intervalId);\n  }, []);\n\n  // Post Request to Server\n\n  const handlechecked = async isChecked => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/postData', {\n        data: isChecked\n      });\n      console.log(response);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  const handleCaptchaChange = event => {\n    setCaptchaInput(event.target.value);\n  };\n  const validateCaptcha = () => {\n    if (captchaInput === expectedCaptcha) {\n      setCaptchaValid(true);\n    } else {\n      setCaptchaValid(false);\n      alert('Invalid Password. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Enter Password\",\n      variant: \"outlined\",\n      value: captchaInput,\n      onChange: handleCaptchaChange,\n      disabled: captchaValid,\n      type: \"password\",\n      fullWidth: true,\n      margin: \"normal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: validateCaptcha,\n      disabled: captchaValid,\n      fullWidth: true,\n      sx: {\n        mb: 2\n      },\n      children: \"Verify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Switch, {\n        checked: checked,\n        onChange: handleChange,\n        color: \"warning\",\n        disabled: !captchaValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this),\n      label: state\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(SwitchCard, \"1uJViwXzxWqRrUW0eqTTJZti3UQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = SwitchCard;\nexport default SwitchCard;\nvar _c;\n$RefreshReg$(_c, \"SwitchCard\");","map":{"version":3,"names":["React","Switch","FormControlLabel","TextField","Button","Box","axios","useDispatch","toggle","state","setstate","useSelector","jsxDEV","_jsxDEV","SwitchCard","_s","dispatch","checked","switch","value","captchaInput","setCaptchaInput","useState","captchaValid","setCaptchaValid","expectedCaptcha","handleChange","event","isChecked","target","switchstate","handlechecked","useEffect","fetchData","response","get","error","console","intervalId","setInterval","clearInterval","post","data","log","handleCaptchaChange","validateCaptcha","alert","children","label","variant","onChange","disabled","type","fullWidth","margin","fileName","_jsxFileName","lineNumber","columnNumber","onClick","sx","mb","control","color","_c","$RefreshReg$"],"sources":["C:/Projects/React Projects/Dashboard/dashboard/src/components/SwitchCard.js"],"sourcesContent":["import React from 'react';\r\nimport Switch from '@mui/material/Switch';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport Box from '@mui/material/Box';\r\nimport axios from \"axios\";\r\nimport {useDispatch} from 'react-redux';\r\nimport { toggle } from '../features/switch';\r\nimport state, { setstate } from '../features/state';\r\nimport {useSelector} from \"react-redux\";\r\n\r\nfunction SwitchCard() {\r\n  const dispatch = useDispatch();\r\n  const checked  = useSelector(state => state.switch.value);\r\n  const state = useSelector(state => state.state.value);\r\n\r\n  const [captchaInput, setCaptchaInput] = React.useState('');\r\n  const [captchaValid, setCaptchaValid] = React.useState(false);\r\n\r\n  const expectedCaptcha = '12345'; \r\n\r\n  const handleChange = (event) => {\r\n    const isChecked = event.target.checked;\r\n    dispatch(toggle({\r\n        checked:isChecked\r\n    }))\r\n    const switchstate = isChecked ? \"ON\" : \"OFF\";\r\n    dispatch(setstate({\r\n        state:switchstate\r\n    }))\r\n    if (captchaValid) {\r\n      handlechecked(isChecked);\r\n      if (!isChecked) {\r\n        setCaptchaValid(false);\r\n        setCaptchaInput('');\r\n      }\r\n    }\r\n  };\r\n\r\n  //Get Request to server\r\n\r\n  React.useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/data');\r\n\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    const intervalId = setInterval(fetchData, 1000);\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, []); \r\n\r\n  // Post Request to Server\r\n\r\n  const handlechecked = async (isChecked) => {\r\n    try {\r\n        const response = await axios.post('http://localhost:5000/api/postData', \r\n        {\r\n            data: isChecked \r\n        });\r\n        console.log(response);\r\n    } catch (error) {\r\n        console.error('Error:', error);\r\n    }\r\n  };\r\n  \r\n  const handleCaptchaChange = (event) => {\r\n    setCaptchaInput(event.target.value);\r\n  };\r\n\r\n  const validateCaptcha = () => {\r\n    if (captchaInput === expectedCaptcha) {\r\n      setCaptchaValid(true);\r\n    } else {\r\n      setCaptchaValid(false);\r\n      alert('Invalid Password. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <TextField\r\n        label=\"Enter Password\"\r\n        variant=\"outlined\"\r\n        value={captchaInput}\r\n        onChange={handleCaptchaChange}\r\n        disabled={captchaValid}\r\n        type=\"password\"\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={validateCaptcha}\r\n        disabled={captchaValid}\r\n        fullWidth\r\n        sx={{ mb: 2 }}\r\n      >\r\n        Verify\r\n      </Button>\r\n      <FormControlLabel\r\n        control={\r\n          <Switch\r\n            checked={checked}\r\n            onChange={handleChange}\r\n            color=\"warning\"\r\n            disabled={!captchaValid}\r\n          />\r\n        }\r\n        label={state}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default SwitchCard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}