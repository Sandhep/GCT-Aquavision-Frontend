{"ast":null,"code":"import React,{useEffect}from'react';import Typography from'@mui/material/Typography';import{useDispatch,useSelector}from\"react-redux\";import{setstatus}from\"../features/status\";import{setcolor}from'../features/color';import io from\"socket.io-client\";import{jsx as _jsx}from\"react/jsx-runtime\";function Devicestatus(){const socket=io.connect(process.env.REACT_APP_SERVER_URL);const dispatch=useDispatch();const status=useSelector(state=>state.status.value);const color=useSelector(state=>state.statuscolor.value);useEffect(()=>{const handlestatus=data=>{dispatch(setstatus({status:data.device_status}));if(data.device_status===\"Online\"){dispatch(setcolor({statuscolor:\"green\"}));}else{dispatch(setcolor({statuscolor:\"red\"}));}};socket.on(\"connected\",handlestatus);socket.on(\"Device_status\",handlestatus);return()=>{socket.off(\"connected\",handlestatus);};},[socket,dispatch]);return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:color,children:status})});}export default Devicestatus;","map":{"version":3,"names":["React","useEffect","Typography","useDispatch","useSelector","setstatus","setcolor","io","jsx","_jsx","Devicestatus","socket","connect","process","env","REACT_APP_SERVER_URL","dispatch","status","state","value","color","statuscolor","handlestatus","data","device_status","on","off","children","variant"],"sources":["C:/Projects/React Projects/Dashboard/dashboard/src/components/Devicestatus.js"],"sourcesContent":["import React,{useEffect} from 'react'\r\nimport Typography from '@mui/material/Typography';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {setstatus} from \"../features/status\";\r\nimport { setcolor } from '../features/color';\r\nimport io from \"socket.io-client\";\r\n\r\n\r\nfunction Devicestatus() {\r\n  \r\n  const socket=io.connect(process.env.REACT_APP_SERVER_URL);\r\n\r\n  const dispatch = useDispatch();\r\n  const status = useSelector(state => state.status.value);\r\n  const color = useSelector(state => state.statuscolor.value);\r\n  \r\n  useEffect(()=>{\r\n\r\n    const handlestatus =(data)=>{\r\n      dispatch(setstatus({status:data.device_status})); \r\n      if(data.device_status === \"Online\"){\r\n        dispatch(setcolor({statuscolor:\"green\"}));\r\n      }else{\r\n        dispatch(setcolor({statuscolor:\"red\"}));\r\n      }\r\n    }\r\n\r\n    socket.on(\"connected\",handlestatus);\r\n    socket.on(\"Device_status\",handlestatus);\r\n\r\n    return () => {\r\n      socket.off(\"connected\",handlestatus); \r\n    };\r\n     \r\n  },[socket,dispatch]);\r\n  \r\n  return (\r\n    <div>\r\n      <Typography variant=\"h6\" color={color}>\r\n         {status}\r\n       </Typography>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Devicestatus\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAEC,SAAS,KAAO,OAAO,CACrC,MAAO,CAAAC,UAAU,KAAM,0BAA0B,CACjD,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CACtD,OAAQC,SAAS,KAAO,oBAAoB,CAC5C,OAASC,QAAQ,KAAQ,mBAAmB,CAC5C,MAAO,CAAAC,EAAE,KAAM,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAGlC,QAAS,CAAAC,YAAYA,CAAA,CAAG,CAEtB,KAAM,CAAAC,MAAM,CAACJ,EAAE,CAACK,OAAO,CAACC,OAAO,CAACC,GAAG,CAACC,oBAAoB,CAAC,CAEzD,KAAM,CAAAC,QAAQ,CAAGb,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAc,MAAM,CAAGb,WAAW,CAACc,KAAK,EAAIA,KAAK,CAACD,MAAM,CAACE,KAAK,CAAC,CACvD,KAAM,CAAAC,KAAK,CAAGhB,WAAW,CAACc,KAAK,EAAIA,KAAK,CAACG,WAAW,CAACF,KAAK,CAAC,CAE3DlB,SAAS,CAAC,IAAI,CAEZ,KAAM,CAAAqB,YAAY,CAAGC,IAAI,EAAG,CAC1BP,QAAQ,CAACX,SAAS,CAAC,CAACY,MAAM,CAACM,IAAI,CAACC,aAAa,CAAC,CAAC,CAAC,CAChD,GAAGD,IAAI,CAACC,aAAa,GAAK,QAAQ,CAAC,CACjCR,QAAQ,CAACV,QAAQ,CAAC,CAACe,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,CAC3C,CAAC,IAAI,CACHL,QAAQ,CAACV,QAAQ,CAAC,CAACe,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CACzC,CACF,CAAC,CAEDV,MAAM,CAACc,EAAE,CAAC,WAAW,CAACH,YAAY,CAAC,CACnCX,MAAM,CAACc,EAAE,CAAC,eAAe,CAACH,YAAY,CAAC,CAEvC,MAAO,IAAM,CACXX,MAAM,CAACe,GAAG,CAAC,WAAW,CAACJ,YAAY,CAAC,CACtC,CAAC,CAEH,CAAC,CAAC,CAACX,MAAM,CAACK,QAAQ,CAAC,CAAC,CAEpB,mBACEP,IAAA,QAAAkB,QAAA,cACElB,IAAA,CAACP,UAAU,EAAC0B,OAAO,CAAC,IAAI,CAACR,KAAK,CAAEA,KAAM,CAAAO,QAAA,CAClCV,MAAM,CACG,CAAC,CACX,CAAC,CAEV,CAEA,cAAe,CAAAP,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}