{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\React Projects\\\\Dashboard\\\\dashboard\\\\src\\\\components\\\\Sensorstatus.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport Typography from '@mui/material/Typography';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Switch from '@mui/material/Switch';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setsensordata } from \"../features/sensordata\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:4000\");\nfunction Sensorstatus() {\n  _s();\n  const dispatch = useDispatch();\n  const sensordata = useSelector(state => state.sensordata.value);\n  const pumpstatus = useSelector(state => state.switchstate.value);\n  useEffect(() => {\n    socket.on(\"Sensordata\", data => {\n      dispatch(setsensordata(data));\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Switch, {\n        checked: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this),\n      label: \"MODE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      children: [\"Overhead Tank Float Switch  is \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: sensordata.OHT_Float === \"ON\" ? \"green\" : \"red\"\n        },\n        children: sensordata.OHT_Float\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      children: [\"Underground Tank Float Switch  is \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: sensordata.UGT_Float === \"ON\" ? \"green\" : \"red\"\n        },\n        children: sensordata.UGT_Float\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 43\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      children: [\"Pump is \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: pumpstatus === \"ON\" ? \"green\" : \"red\"\n        },\n        children: pumpstatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(Sensorstatus, \"nYFCdcGfoTO+jjCTG0wFCNd2u4c=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Sensorstatus;\nexport default Sensorstatus;\nvar _c;\n$RefreshReg$(_c, \"Sensorstatus\");","map":{"version":3,"names":["React","useEffect","Typography","FormControlLabel","Switch","useDispatch","useSelector","setsensordata","io","jsxDEV","_jsxDEV","socket","connect","Sensorstatus","_s","dispatch","sensordata","state","value","pumpstatus","switchstate","on","data","children","control","checked","fileName","_jsxFileName","lineNumber","columnNumber","label","variant","style","color","OHT_Float","UGT_Float","_c","$RefreshReg$"],"sources":["C:/Projects/React Projects/Dashboard/dashboard/src/components/Sensorstatus.js"],"sourcesContent":["import React,{useEffect} from 'react'\r\nimport Typography from '@mui/material/Typography';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Switch from '@mui/material/Switch';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {setsensordata} from \"../features/sensordata\"\r\nimport io from \"socket.io-client\";\r\n\r\n\r\nconst socket=io.connect(\"http://localhost:4000\");\r\n\r\nfunction Sensorstatus() {\r\n\r\n  const dispatch = useDispatch();\r\n  const sensordata = useSelector(state => state.sensordata.value);\r\n  const pumpstatus = useSelector(state => state.switchstate.value);\r\n  \r\n  useEffect(()=>{\r\n    socket.on(\"Sensordata\",(data)=>{\r\n        dispatch(setsensordata(data)); \r\n    });\r\n  });\r\n  \r\n  return (\r\n    <div>\r\n       <FormControlLabel\r\n        control={\r\n          <Switch\r\n            checked={true}\r\n          />\r\n        }\r\n        label=\"MODE\"\r\n      />\r\n      <Typography variant=\"subtitle1\">\r\n        Overhead Tank Float Switch  is <span style={{color:sensordata.OHT_Float === \"ON\" ? \"green\" : \"red\"}}>{sensordata.OHT_Float}</span> \r\n      </Typography>\r\n      <Typography variant=\"subtitle1\">\r\n        Underground Tank Float Switch  is <span style={{color:sensordata.UGT_Float === \"ON\" ? \"green\" : \"red\"}}>{sensordata.UGT_Float}</span>\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\">\r\n        Pump is <span style={{color:pumpstatus === \"ON\" ? \"green\" : \"red\"}}>{pumpstatus}</span>\r\n      </Typography>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sensorstatus;\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}