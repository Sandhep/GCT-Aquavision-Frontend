{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\React Projects\\\\Dashboard\\\\dashboard\\\\src\\\\components\\\\ControlledSwitches.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Switch from '@mui/material/Switch';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ControlledSwitches() {\n  _s();\n  const [checked, setChecked] = React.useState(false);\n  const [state, setState] = React.useState('OFF');\n  const [captchaInput, setCaptchaInput] = React.useState('');\n  const [captchaValid, setCaptchaValid] = React.useState(false);\n  const expectedCaptcha = '12345';\n  const handleChange = event => {\n    const isChecked = event.target.checked;\n    if (captchaValid) {\n      setChecked(isChecked);\n      setState(isChecked ? 'ON' : 'OFF');\n      handlechecked(isChecked);\n      if (!isChecked) {\n        setCaptchaValid(false);\n        setCaptchaInput('');\n      }\n    }\n  };\n\n  //Get Request to server\n\n  React.useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/data');\n        setChecked(response.data.message);\n        setState(response.data.message ? 'ON' : 'OFF');\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    const intervalId = setInterval(fetchData, 1000);\n\n    // Cleanup function to clear the interval\n    return () => clearInterval(intervalId);\n  }, []); // Empty dependency array to run effect only once on mount\n\n  // Post Request to Server\n\n  const handlechecked = async isChecked => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/postData', {\n        data: isChecked // Sending the input data in the request body\n      });\n      console.log(response);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  const handleCaptchaChange = event => {\n    setCaptchaInput(event.target.value);\n  };\n  const validateCaptcha = () => {\n    if (captchaInput === expectedCaptcha) {\n      setCaptchaValid(true);\n    } else {\n      setCaptchaValid(false);\n      alert('Invalid Password. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Enter Password to Turn ON\",\n      variant: \"outlined\",\n      value: captchaInput,\n      onChange: handleCaptchaChange,\n      disabled: captchaValid,\n      type: \"password\",\n      fullWidth: true,\n      margin: \"normal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: validateCaptcha,\n      disabled: captchaValid,\n      fullWidth: true,\n      sx: {\n        mb: 2\n      },\n      children: \"Validate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Switch, {\n        checked: checked,\n        onChange: handleChange,\n        color: \"warning\",\n        disabled: !captchaValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this),\n      label: state\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(ControlledSwitches, \"RaNwJOf3O00zaC2yn7NUDPfa4JU=\");\n_c = ControlledSwitches;\nexport default ControlledSwitches;\nvar _c;\n$RefreshReg$(_c, \"ControlledSwitches\");","map":{"version":3,"names":["React","Switch","FormControlLabel","TextField","Button","Box","axios","jsxDEV","_jsxDEV","ControlledSwitches","_s","checked","setChecked","useState","state","setState","captchaInput","setCaptchaInput","captchaValid","setCaptchaValid","expectedCaptcha","handleChange","event","isChecked","target","handlechecked","useEffect","fetchData","response","get","data","message","error","console","intervalId","setInterval","clearInterval","post","log","handleCaptchaChange","value","validateCaptcha","alert","children","label","variant","onChange","disabled","type","fullWidth","margin","fileName","_jsxFileName","lineNumber","columnNumber","onClick","sx","mb","control","color","_c","$RefreshReg$"],"sources":["C:/Projects/React Projects/Dashboard/dashboard/src/components/ControlledSwitches.js"],"sourcesContent":["import React from 'react';\r\nimport Switch from '@mui/material/Switch';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport Box from '@mui/material/Box';\r\nimport axios from \"axios\";\r\n\r\nfunction ControlledSwitches() {\r\n  const [checked, setChecked] = React.useState(false);\r\n  const [state, setState] = React.useState('OFF');\r\n  const [captchaInput, setCaptchaInput] = React.useState('');\r\n  const [captchaValid, setCaptchaValid] = React.useState(false);\r\n\r\n  const expectedCaptcha = '12345'; \r\n\r\n  const handleChange = (event) => {\r\n    const isChecked = event.target.checked;\r\n    if (captchaValid) {\r\n      setChecked(isChecked);\r\n      setState(isChecked ? 'ON' : 'OFF');\r\n      handlechecked(isChecked);\r\n      if (!isChecked) {\r\n        setCaptchaValid(false);\r\n        setCaptchaInput('');\r\n      }\r\n    }\r\n  };\r\n\r\n  //Get Request to server\r\n\r\n  React.useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/data');\r\n        setChecked(response.data.message)\r\n        setState(response.data.message ? 'ON' : 'OFF');\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    const intervalId = setInterval(fetchData, 1000);\r\n\r\n    // Cleanup function to clear the interval\r\n    return () => clearInterval(intervalId);\r\n  }, []); // Empty dependency array to run effect only once on mount\r\n\r\n\r\n  // Post Request to Server\r\n\r\n  const handlechecked = async (isChecked) => {\r\n    try {\r\n        const response = await axios.post('http://localhost:5000/api/postData', \r\n        {\r\n            data: isChecked // Sending the input data in the request body\r\n        });\r\n        console.log(response);\r\n    } catch (error) {\r\n        console.error('Error:', error);\r\n    }\r\n  };\r\n  \r\n  const handleCaptchaChange = (event) => {\r\n    setCaptchaInput(event.target.value);\r\n  };\r\n\r\n  const validateCaptcha = () => {\r\n    if (captchaInput === expectedCaptcha) {\r\n      setCaptchaValid(true);\r\n    } else {\r\n      setCaptchaValid(false);\r\n      alert('Invalid Password. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <TextField\r\n        label=\"Enter Password to Turn ON\"\r\n        variant=\"outlined\"\r\n        value={captchaInput}\r\n        onChange={handleCaptchaChange}\r\n        disabled={captchaValid}\r\n        type=\"password\"\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={validateCaptcha}\r\n        disabled={captchaValid}\r\n        fullWidth\r\n        sx={{ mb: 2 }}\r\n      >\r\n        Validate\r\n      </Button>\r\n      <FormControlLabel\r\n        control={\r\n          <Switch\r\n            checked={checked}\r\n            onChange={handleChange}\r\n            color=\"warning\"\r\n            disabled={!captchaValid}\r\n          />\r\n        }\r\n        label={state}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ControlledSwitches;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,gBAAgB,MAAM,gCAAgC;AAC7D,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,kBAAkBA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,KAAK,CAACa,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,KAAK,CAACa,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACG,YAAY,EAAEC,eAAe,CAAC,GAAGjB,KAAK,CAACa,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACK,YAAY,EAAEC,eAAe,CAAC,GAAGnB,KAAK,CAACa,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMO,eAAe,GAAG,OAAO;EAE/B,MAAMC,YAAY,GAAIC,KAAK,IAAK;IAC9B,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAM,CAACb,OAAO;IACtC,IAAIO,YAAY,EAAE;MAChBN,UAAU,CAACW,SAAS,CAAC;MACrBR,QAAQ,CAACQ,SAAS,GAAG,IAAI,GAAG,KAAK,CAAC;MAClCE,aAAa,CAACF,SAAS,CAAC;MACxB,IAAI,CAACA,SAAS,EAAE;QACdJ,eAAe,CAAC,KAAK,CAAC;QACtBF,eAAe,CAAC,EAAE,CAAC;MACrB;IACF;EACF,CAAC;;EAED;;EAEAjB,KAAK,CAAC0B,SAAS,CAAC,MAAM;IACpB,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,GAAG,CAAC,gCAAgC,CAAC;QAClEjB,UAAU,CAACgB,QAAQ,CAACE,IAAI,CAACC,OAAO,CAAC;QACjChB,QAAQ,CAACa,QAAQ,CAACE,IAAI,CAACC,OAAO,GAAG,IAAI,GAAG,KAAK,CAAC;MAChD,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAED,MAAME,UAAU,GAAGC,WAAW,CAACR,SAAS,EAAE,IAAI,CAAC;;IAE/C;IACA,OAAO,MAAMS,aAAa,CAACF,UAAU,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAGR;;EAEA,MAAMT,aAAa,GAAG,MAAOF,SAAS,IAAK;IACzC,IAAI;MACA,MAAMK,QAAQ,GAAG,MAAMtB,KAAK,CAAC+B,IAAI,CAAC,oCAAoC,EACtE;QACIP,IAAI,EAAEP,SAAS,CAAC;MACpB,CAAC,CAAC;MACFU,OAAO,CAACK,GAAG,CAACV,QAAQ,CAAC;IACzB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAClC;EACF,CAAC;EAED,MAAMO,mBAAmB,GAAIjB,KAAK,IAAK;IACrCL,eAAe,CAACK,KAAK,CAACE,MAAM,CAACgB,KAAK,CAAC;EACrC,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIzB,YAAY,KAAKI,eAAe,EAAE;MACpCD,eAAe,CAAC,IAAI,CAAC;IACvB,CAAC,MAAM;MACLA,eAAe,CAAC,KAAK,CAAC;MACtBuB,KAAK,CAAC,qCAAqC,CAAC;IAC9C;EACF,CAAC;EAED,oBACElC,OAAA,CAACH,GAAG;IAAAsC,QAAA,gBACFnC,OAAA,CAACL,SAAS;MACRyC,KAAK,EAAC,2BAA2B;MACjCC,OAAO,EAAC,UAAU;MAClBL,KAAK,EAAExB,YAAa;MACpB8B,QAAQ,EAAEP,mBAAoB;MAC9BQ,QAAQ,EAAE7B,YAAa;MACvB8B,IAAI,EAAC,UAAU;MACfC,SAAS;MACTC,MAAM,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,eACF9C,OAAA,CAACJ,MAAM;MACLyC,OAAO,EAAC,WAAW;MACnBU,OAAO,EAAEd,eAAgB;MACzBM,QAAQ,EAAE7B,YAAa;MACvB+B,SAAS;MACTO,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAd,QAAA,EACf;IAED;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACT9C,OAAA,CAACN,gBAAgB;MACfwD,OAAO,eACLlD,OAAA,CAACP,MAAM;QACLU,OAAO,EAAEA,OAAQ;QACjBmC,QAAQ,EAAEzB,YAAa;QACvBsC,KAAK,EAAC,SAAS;QACfZ,QAAQ,EAAE,CAAC7B;MAAa;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CACF;MACDV,KAAK,EAAE9B;IAAM;MAAAqC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC5C,EAAA,CAtGQD,kBAAkB;AAAAmD,EAAA,GAAlBnD,kBAAkB;AAwG3B,eAAeA,kBAAkB;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}