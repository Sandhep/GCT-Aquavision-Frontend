{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\React Projects\\\\Dashboard\\\\dashboard\\\\src\\\\components\\\\ControlledSwitches.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Switch from '@mui/material/Switch';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport axios from \"axios\";\nimport { useDispatch } from 'react-redux';\nimport { toggle } from '../features/switch';\nimport { setstate } from '../features/state';\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ControlledSwitches() {\n  _s();\n  const dispatch = useDispatch();\n  const g_checked = useSelector(state => state.switch.value);\n  const g_state = useSelector(state => state.state.value);\n  const [checked, setChecked] = React.useState(false);\n  const [state, setState] = React.useState('OFF');\n  const [captchaInput, setCaptchaInput] = React.useState('');\n  const [captchaValid, setCaptchaValid] = React.useState(false);\n  const expectedCaptcha = '12345';\n  const handleChange = event => {\n    const isChecked = event.target.checked;\n    if (captchaValid) {\n      setChecked(isChecked);\n      dispatch(toggle({\n        checked: checked\n      }));\n      setState(isChecked ? 'ON' : 'OFF');\n      dispatch(setstate({\n        state: state\n      }));\n      handlechecked(g_checked);\n      if (!isChecked) {\n        setCaptchaValid(false);\n        setCaptchaInput('');\n      }\n    }\n  };\n\n  //Get Request to server\n\n  React.useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/data');\n        setChecked(response.data.message);\n        setState(response.data.message ? 'ON' : 'OFF');\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    const intervalId = setInterval(fetchData, 1000);\n    return () => clearInterval(intervalId);\n  }, []);\n\n  // Post Request to Server\n\n  const handlechecked = async g_checked => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/postData', {\n        data: g_checked\n      });\n      console.log(response);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  const handleCaptchaChange = event => {\n    setCaptchaInput(event.target.value);\n  };\n  const validateCaptcha = () => {\n    if (captchaInput === expectedCaptcha) {\n      setCaptchaValid(true);\n    } else {\n      setCaptchaValid(false);\n      alert('Invalid Password. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Enter Password\",\n      variant: \"outlined\",\n      value: captchaInput,\n      onChange: handleCaptchaChange,\n      disabled: captchaValid,\n      type: \"password\",\n      fullWidth: true,\n      margin: \"normal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: validateCaptcha,\n      disabled: captchaValid,\n      fullWidth: true,\n      sx: {\n        mb: 2\n      },\n      children: \"Verify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Switch, {\n        checked: g_checked,\n        onChange: handleChange,\n        color: \"warning\",\n        disabled: !captchaValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this),\n      label: g_state\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(ControlledSwitches, \"eqwDLVFQZuTvrOCYh/NMxDZJ0o0=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = ControlledSwitches;\nexport default ControlledSwitches;\nvar _c;\n$RefreshReg$(_c, \"ControlledSwitches\");","map":{"version":3,"names":["React","Switch","FormControlLabel","TextField","Button","Box","axios","useDispatch","toggle","setstate","useSelector","jsxDEV","_jsxDEV","ControlledSwitches","_s","dispatch","g_checked","state","switch","value","g_state","checked","setChecked","useState","setState","captchaInput","setCaptchaInput","captchaValid","setCaptchaValid","expectedCaptcha","handleChange","event","isChecked","target","handlechecked","useEffect","fetchData","response","get","data","message","error","console","intervalId","setInterval","clearInterval","post","log","handleCaptchaChange","validateCaptcha","alert","children","label","variant","onChange","disabled","type","fullWidth","margin","fileName","_jsxFileName","lineNumber","columnNumber","onClick","sx","mb","control","color","_c","$RefreshReg$"],"sources":["C:/Projects/React Projects/Dashboard/dashboard/src/components/ControlledSwitches.js"],"sourcesContent":["import React from 'react';\r\nimport Switch from '@mui/material/Switch';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport Box from '@mui/material/Box';\r\nimport axios from \"axios\";\r\nimport {useDispatch} from 'react-redux';\r\nimport {toggle} from '../features/switch';\r\nimport { setstate } from '../features/state';\r\nimport {useSelector} from \"react-redux\";\r\n\r\nfunction ControlledSwitches() {\r\n  const dispatch = useDispatch();\r\n  const g_checked = useSelector(state =>state.switch.value)\r\n  const g_state = useSelector(state=>state.state.value)\r\n\r\n  const [checked, setChecked] = React.useState(false);\r\n  const [state, setState] = React.useState('OFF');\r\n  const [captchaInput, setCaptchaInput] = React.useState('');\r\n  const [captchaValid, setCaptchaValid] = React.useState(false);\r\n\r\n  const expectedCaptcha = '12345'; \r\n\r\n  const handleChange = (event) => {\r\n    const isChecked = event.target.checked;\r\n    if (captchaValid) {\r\n      setChecked(isChecked);\r\n      dispatch(toggle({checked:checked}));\r\n      setState(isChecked ? 'ON' : 'OFF');\r\n      dispatch(setstate({state:state}));\r\n      handlechecked(g_checked);\r\n      if (!isChecked) {\r\n        setCaptchaValid(false);\r\n        setCaptchaInput('');\r\n      }\r\n    }\r\n  };\r\n\r\n  //Get Request to server\r\n\r\n  React.useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/data');\r\n        setChecked(response.data.message)\r\n        setState(response.data.message ? 'ON' : 'OFF');\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    const intervalId = setInterval(fetchData, 1000);\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, []); \r\n\r\n  // Post Request to Server\r\n\r\n  const handlechecked = async (g_checked) => {\r\n    try {\r\n        const response = await axios.post('http://localhost:5000/api/postData', \r\n        {\r\n            data: g_checked \r\n        });\r\n        console.log(response);\r\n    } catch (error) {\r\n        console.error('Error:', error);\r\n    }\r\n  };\r\n  \r\n  const handleCaptchaChange = (event) => {\r\n    setCaptchaInput(event.target.value);\r\n  };\r\n\r\n  const validateCaptcha = () => {\r\n    if (captchaInput === expectedCaptcha) {\r\n      setCaptchaValid(true);\r\n    } else {\r\n      setCaptchaValid(false);\r\n      alert('Invalid Password. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <TextField\r\n        label=\"Enter Password\"\r\n        variant=\"outlined\"\r\n        value={captchaInput}\r\n        onChange={handleCaptchaChange}\r\n        disabled={captchaValid}\r\n        type=\"password\"\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={validateCaptcha}\r\n        disabled={captchaValid}\r\n        fullWidth\r\n        sx={{ mb: 2 }}\r\n      >\r\n        Verify\r\n      </Button>\r\n      <FormControlLabel\r\n        control={\r\n          <Switch\r\n            checked={g_checked}\r\n            onChange={handleChange}\r\n            color=\"warning\"\r\n            disabled={!captchaValid}\r\n          />\r\n        }\r\n        label={g_state}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ControlledSwitches;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}