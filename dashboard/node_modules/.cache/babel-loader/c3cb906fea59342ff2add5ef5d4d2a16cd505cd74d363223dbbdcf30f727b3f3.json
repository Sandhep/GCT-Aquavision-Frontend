{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\React Projects\\\\Dashboard\\\\dashboard\\\\src\\\\components\\\\ControlledSwitches.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Switch from '@mui/material/Switch';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVER_URL = \"http://localhost:4000\";\nfunction ControlledSwitches() {\n  _s();\n  const [checked, setChecked] = React.useState(false);\n  const [state, setState] = React.useState('OFF');\n  const [captchaInput, setCaptchaInput] = React.useState('');\n  const [captchaValid, setCaptchaValid] = React.useState(false);\n  const expectedCaptcha = '12345';\n  const handleChange = event => {\n    const isChecked = event.target.checked;\n    if (captchaValid) {\n      setChecked(isChecked);\n      setState(isChecked ? 'ON' : 'OFF');\n      handleswitch(isChecked);\n      if (!isChecked) {\n        setCaptchaValid(false);\n        setCaptchaInput('');\n      }\n    }\n  };\n  const handleCaptchaChange = event => {\n    setCaptchaInput(event.target.value);\n  };\n  const validateCaptcha = () => {\n    if (captchaInput === expectedCaptcha) {\n      setCaptchaValid(true);\n    } else {\n      setCaptchaValid(false);\n      alert('Invalid Password. Please try again.');\n    }\n  };\n  function handleswitch(isChecked) {\n    axios({\n      url: `${SERVER_URL}/switch`,\n      method: \"POST\",\n      data: isChecked\n    }).then(res => {}).catch(err => {});\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Enter Password to Turn ON\",\n      variant: \"outlined\",\n      value: captchaInput,\n      onChange: handleCaptchaChange,\n      disabled: captchaValid,\n      type: \"password\",\n      fullWidth: true,\n      margin: \"normal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: validateCaptcha,\n      disabled: captchaValid,\n      fullWidth: true,\n      sx: {\n        mb: 2\n      },\n      children: \"Validate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Switch, {\n        checked: checked,\n        onChange: handleChange,\n        color: \"warning\",\n        disabled: !captchaValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this),\n      label: state\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(ControlledSwitches, \"Zqad3cXR6lohQ5PhpFzFRxKKj8I=\");\n_c = ControlledSwitches;\nexport default ControlledSwitches;\nvar _c;\n$RefreshReg$(_c, \"ControlledSwitches\");","map":{"version":3,"names":["React","Switch","FormControlLabel","TextField","Button","Box","axios","jsxDEV","_jsxDEV","SERVER_URL","ControlledSwitches","_s","checked","setChecked","useState","state","setState","captchaInput","setCaptchaInput","captchaValid","setCaptchaValid","expectedCaptcha","handleChange","event","isChecked","target","handleswitch","handleCaptchaChange","value","validateCaptcha","alert","url","method","data","then","res","catch","err","children","label","variant","onChange","disabled","type","fullWidth","margin","fileName","_jsxFileName","lineNumber","columnNumber","onClick","sx","mb","control","color","_c","$RefreshReg$"],"sources":["C:/Projects/React Projects/Dashboard/dashboard/src/components/ControlledSwitches.js"],"sourcesContent":["import React from 'react';\r\nimport Switch from '@mui/material/Switch';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport Box from '@mui/material/Box';\r\nimport axios from \"axios\";\r\n\r\nconst SERVER_URL =\"http://localhost:4000\";\r\n\r\nfunction ControlledSwitches() {\r\n  const [checked, setChecked] = React.useState(false);\r\n  const [state, setState] = React.useState('OFF');\r\n  const [captchaInput, setCaptchaInput] = React.useState('');\r\n  const [captchaValid, setCaptchaValid] = React.useState(false);\r\n\r\n  const expectedCaptcha = '12345'; \r\n\r\n  const handleChange = (event) => {\r\n    const isChecked = event.target.checked;\r\n    if (captchaValid) {\r\n      setChecked(isChecked);\r\n      setState(isChecked ? 'ON' : 'OFF');\r\n      handleswitch(isChecked);\r\n      if (!isChecked) {\r\n        setCaptchaValid(false);\r\n        setCaptchaInput('');\r\n      }\r\n    }\r\n  };\r\n  \r\n  const handleCaptchaChange = (event) => {\r\n    setCaptchaInput(event.target.value);\r\n  };\r\n\r\n  const validateCaptcha = () => {\r\n    if (captchaInput === expectedCaptcha) {\r\n      setCaptchaValid(true);\r\n    } else {\r\n      setCaptchaValid(false);\r\n      alert('Invalid Password. Please try again.');\r\n    }\r\n  };\r\n\r\n  function handleswitch(isChecked){\r\n    axios({\r\n      url:`${SERVER_URL}/switch`,\r\n      method: \"POST\",\r\n      data: isChecked,\r\n      })\r\n\r\n      .then((res) => {})\r\n\r\n      .catch((err) => {});\r\n  }\r\n\r\n\r\n  return (\r\n    <Box>\r\n      <TextField\r\n        label=\"Enter Password to Turn ON\"\r\n        variant=\"outlined\"\r\n        value={captchaInput}\r\n        onChange={handleCaptchaChange}\r\n        disabled={captchaValid}\r\n        type=\"password\"\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={validateCaptcha}\r\n        disabled={captchaValid}\r\n        fullWidth\r\n        sx={{ mb: 2 }}\r\n      >\r\n        Validate\r\n      </Button>\r\n      <FormControlLabel\r\n        control={\r\n          <Switch\r\n            checked={checked}\r\n            onChange={handleChange}\r\n            color=\"warning\"\r\n            disabled={!captchaValid}\r\n          />\r\n        }\r\n        label={state}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ControlledSwitches;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}