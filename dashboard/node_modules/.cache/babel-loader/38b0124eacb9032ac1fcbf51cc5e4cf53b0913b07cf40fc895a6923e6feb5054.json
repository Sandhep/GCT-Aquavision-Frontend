{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\React Projects\\\\Dashboard\\\\dashboard\\\\src\\\\components\\\\SwitchCard.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Switch from '@mui/material/Switch';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport { useDispatch } from 'react-redux';\nimport { toggle } from '../features/switch';\nimport { setstate } from '../features/state';\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SwitchCard() {\n  _s();\n  const dispatch = useDispatch();\n  const checked = useSelector(state => state.switch.value);\n  const checkedstate = useSelector(state => state.switchstate.value);\n  const [captchaInput, setCaptchaInput] = React.useState('');\n  const [captchaValid, setCaptchaValid] = React.useState(false);\n  const expectedCaptcha = '12345';\n  const handleChange = event => {\n    const isChecked = event.target.checked;\n    dispatch(toggle({\n      checked: isChecked\n    }));\n    const position = isChecked ? \"ON\" : \"OFF\";\n    dispatch(setstate({\n      state: position\n    }));\n    if (captchaValid) {\n      if (!isChecked) {\n        setCaptchaValid(false);\n        setCaptchaInput('');\n      }\n    }\n  };\n  const handleCaptchaChange = event => {\n    setCaptchaInput(event.target.value);\n  };\n  const validateCaptcha = () => {\n    if (captchaInput === expectedCaptcha) {\n      setCaptchaValid(true);\n    } else {\n      setCaptchaValid(false);\n      alert('Invalid Password. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Enter Password\",\n      variant: \"outlined\",\n      value: captchaInput,\n      onChange: handleCaptchaChange,\n      disabled: captchaValid,\n      type: \"password\",\n      fullWidth: true,\n      margin: \"normal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: validateCaptcha,\n      disabled: captchaValid,\n      fullWidth: true,\n      sx: {\n        mb: 2\n      },\n      children: \"Verify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Switch, {\n        checked: checked,\n        onChange: handleChange,\n        color: \"warning\",\n        disabled: !captchaValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this),\n      label: checkedstate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(SwitchCard, \"nVBvlJxW8+1doSEZGSa9dcQsSqs=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = SwitchCard;\nexport default SwitchCard;\nvar _c;\n$RefreshReg$(_c, \"SwitchCard\");","map":{"version":3,"names":["React","Switch","FormControlLabel","TextField","Button","Box","useDispatch","toggle","setstate","useSelector","jsxDEV","_jsxDEV","SwitchCard","_s","dispatch","checked","state","switch","value","checkedstate","switchstate","captchaInput","setCaptchaInput","useState","captchaValid","setCaptchaValid","expectedCaptcha","handleChange","event","isChecked","target","position","handleCaptchaChange","validateCaptcha","alert","children","label","variant","onChange","disabled","type","fullWidth","margin","fileName","_jsxFileName","lineNumber","columnNumber","onClick","sx","mb","control","color","_c","$RefreshReg$"],"sources":["C:/Projects/React Projects/Dashboard/dashboard/src/components/SwitchCard.js"],"sourcesContent":["import React from 'react';\r\nimport Switch from '@mui/material/Switch';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport Box from '@mui/material/Box';\r\nimport {useDispatch} from 'react-redux';\r\nimport { toggle } from '../features/switch';\r\nimport { setstate } from '../features/state';\r\nimport {useSelector} from \"react-redux\";\r\n\r\nfunction SwitchCard() {\r\n  const dispatch = useDispatch();\r\n  const checked  = useSelector(state => state.switch.value);\r\n  const checkedstate = useSelector(state => state.switchstate.value);\r\n\r\n  const [captchaInput, setCaptchaInput] = React.useState('');\r\n  const [captchaValid, setCaptchaValid] = React.useState(false);\r\n\r\n  const expectedCaptcha = '12345'; \r\n\r\n  const handleChange = (event) => {\r\n    const isChecked = event.target.checked;\r\n    dispatch(toggle({\r\n        checked:isChecked\r\n    }))\r\n    const position = isChecked ? \"ON\" : \"OFF\";\r\n    dispatch(setstate({\r\n        state:position\r\n    }))\r\n    if (captchaValid) {\r\n      if (!isChecked) {\r\n        setCaptchaValid(false);\r\n        setCaptchaInput('');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCaptchaChange = (event) => {\r\n    setCaptchaInput(event.target.value);\r\n  };\r\n\r\n  const validateCaptcha = () => {\r\n    if (captchaInput === expectedCaptcha) {\r\n      setCaptchaValid(true);\r\n    } else {\r\n      setCaptchaValid(false);\r\n      alert('Invalid Password. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <TextField\r\n        label=\"Enter Password\"\r\n        variant=\"outlined\"\r\n        value={captchaInput}\r\n        onChange={handleCaptchaChange}\r\n        disabled={captchaValid}\r\n        type=\"password\"\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={validateCaptcha}\r\n        disabled={captchaValid}\r\n        fullWidth\r\n        sx={{ mb: 2 }}\r\n      >\r\n        Verify\r\n      </Button>\r\n      <FormControlLabel\r\n        control={\r\n          <Switch\r\n            checked={checked}\r\n            onChange={handleChange}\r\n            color=\"warning\"\r\n            disabled={!captchaValid}\r\n          />\r\n        }\r\n        label={checkedstate}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default SwitchCard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}