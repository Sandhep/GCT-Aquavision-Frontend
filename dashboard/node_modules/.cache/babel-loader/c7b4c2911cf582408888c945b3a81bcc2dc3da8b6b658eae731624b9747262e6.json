{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\React Projects\\\\Dashboard\\\\dashboard\\\\src\\\\components\\\\SwitchCard.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Switch from '@mui/material/Switch';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport axios from \"axios\";\nimport { useDispatch } from 'react-redux';\nimport { toggle } from '../features/switch';\nimport { setstate } from '../features/state';\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SwitchCard() {\n  _s();\n  const dispatch = useDispatch();\n  const checked = useSelector(state => state.switch.value);\n  const checkedstate = useSelector(state => state.switchstate.value);\n  const [captchaInput, setCaptchaInput] = React.useState('');\n  const [captchaValid, setCaptchaValid] = React.useState(false);\n  const expectedCaptcha = '12345';\n  const handleChange = event => {\n    const isChecked = event.target.checked;\n    dispatch(toggle({\n      checked: isChecked\n    }));\n    const switchstate = isChecked ? \"ON\" : \"OFF\";\n    dispatch(setstate({\n      state: switchstate\n    }));\n    if (captchaValid) {\n      handlechecked(checked);\n      if (!isChecked) {\n        setCaptchaValid(false);\n        setCaptchaInput('');\n      }\n    }\n  };\n\n  //Get Request to server\n\n  React.useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/data');\n        dispatch(toggle({\n          checked: response.data.message\n        }));\n        dispatch(setstate({\n          state: response.data.message ? \"ON\" : \"OFF\"\n        }));\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    const intervalId = setInterval(fetchData, 1000);\n    return () => clearInterval(intervalId);\n  }, [dispatch]);\n\n  // Post Request to Server\n\n  const handlechecked = async checked => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/postData', {\n        data: checked\n      });\n      console.log(response);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  const handleCaptchaChange = event => {\n    setCaptchaInput(event.target.value);\n  };\n  const validateCaptcha = () => {\n    if (captchaInput === expectedCaptcha) {\n      setCaptchaValid(true);\n    } else {\n      setCaptchaValid(false);\n      alert('Invalid Password. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Enter Password\",\n      variant: \"outlined\",\n      value: captchaInput,\n      onChange: handleCaptchaChange,\n      disabled: captchaValid,\n      type: \"password\",\n      fullWidth: true,\n      margin: \"normal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: validateCaptcha,\n      disabled: captchaValid,\n      fullWidth: true,\n      sx: {\n        mb: 2\n      },\n      children: \"Verify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Switch, {\n        checked: checked,\n        onChange: handleChange,\n        color: \"warning\",\n        disabled: !captchaValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this),\n      label: state\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(SwitchCard, \"9JD1fH62dWnKE7hpBxP+mlUcuSE=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = SwitchCard;\nexport default SwitchCard;\nvar _c;\n$RefreshReg$(_c, \"SwitchCard\");","map":{"version":3,"names":["React","Switch","FormControlLabel","TextField","Button","Box","axios","useDispatch","toggle","setstate","useSelector","jsxDEV","_jsxDEV","SwitchCard","_s","dispatch","checked","state","switch","value","checkedstate","switchstate","captchaInput","setCaptchaInput","useState","captchaValid","setCaptchaValid","expectedCaptcha","handleChange","event","isChecked","target","handlechecked","useEffect","fetchData","response","get","data","message","error","console","intervalId","setInterval","clearInterval","post","log","handleCaptchaChange","validateCaptcha","alert","children","label","variant","onChange","disabled","type","fullWidth","margin","fileName","_jsxFileName","lineNumber","columnNumber","onClick","sx","mb","control","color","_c","$RefreshReg$"],"sources":["C:/Projects/React Projects/Dashboard/dashboard/src/components/SwitchCard.js"],"sourcesContent":["import React from 'react';\r\nimport Switch from '@mui/material/Switch';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport Box from '@mui/material/Box';\r\nimport axios from \"axios\";\r\nimport {useDispatch} from 'react-redux';\r\nimport { toggle } from '../features/switch';\r\nimport { setstate } from '../features/state';\r\nimport {useSelector} from \"react-redux\";\r\n\r\nfunction SwitchCard() {\r\n  const dispatch = useDispatch();\r\n  const checked  = useSelector(state => state.switch.value);\r\n  const checkedstate = useSelector(state => state.switchstate.value);\r\n\r\n  const [captchaInput, setCaptchaInput] = React.useState('');\r\n  const [captchaValid, setCaptchaValid] = React.useState(false);\r\n\r\n  const expectedCaptcha = '12345'; \r\n\r\n  const handleChange = (event) => {\r\n    const isChecked = event.target.checked;\r\n    dispatch(toggle({\r\n        checked:isChecked\r\n    }))\r\n    const switchstate = isChecked ? \"ON\" : \"OFF\";\r\n    dispatch(setstate({\r\n        state:switchstate\r\n    }))\r\n    if (captchaValid) {\r\n      handlechecked(checked);\r\n      if (!isChecked) {\r\n        setCaptchaValid(false);\r\n        setCaptchaInput('');\r\n      }\r\n    }\r\n  };\r\n\r\n  //Get Request to server\r\n\r\n  React.useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/data');\r\n        dispatch(toggle({checked:response.data.message}));\r\n        dispatch(setstate({\r\n            state:response.data.message ? \"ON\" : \"OFF\"\r\n        }));\r\n\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    const intervalId = setInterval(fetchData, 1000);\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, [dispatch]); \r\n\r\n  // Post Request to Server\r\n\r\n  const handlechecked = async (checked) => {\r\n    try {\r\n        const response = await axios.post('http://localhost:5000/api/postData', \r\n        {\r\n            data: checked\r\n        });\r\n        console.log(response);\r\n    } catch (error) {\r\n        console.error('Error:', error);\r\n    }\r\n  };\r\n  \r\n  const handleCaptchaChange = (event) => {\r\n    setCaptchaInput(event.target.value);\r\n  };\r\n\r\n  const validateCaptcha = () => {\r\n    if (captchaInput === expectedCaptcha) {\r\n      setCaptchaValid(true);\r\n    } else {\r\n      setCaptchaValid(false);\r\n      alert('Invalid Password. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <TextField\r\n        label=\"Enter Password\"\r\n        variant=\"outlined\"\r\n        value={captchaInput}\r\n        onChange={handleCaptchaChange}\r\n        disabled={captchaValid}\r\n        type=\"password\"\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={validateCaptcha}\r\n        disabled={captchaValid}\r\n        fullWidth\r\n        sx={{ mb: 2 }}\r\n      >\r\n        Verify\r\n      </Button>\r\n      <FormControlLabel\r\n        control={\r\n          <Switch\r\n            checked={checked}\r\n            onChange={handleChange}\r\n            color=\"warning\"\r\n            disabled={!captchaValid}\r\n          />\r\n        }\r\n        label={state}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default SwitchCard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}