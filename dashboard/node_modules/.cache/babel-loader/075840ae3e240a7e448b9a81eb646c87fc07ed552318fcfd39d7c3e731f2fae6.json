{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\React Projects\\\\Dashboard\\\\dashboard\\\\src\\\\components\\\\ControlledSwitches.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Switch from '@mui/material/Switch';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ControlledSwitches() {\n  _s();\n  const [checked, setChecked] = React.useState(false);\n  const [state, setState] = React.useState('OFF');\n  const [passwordInput, setPasswordInput] = React.useState('');\n  const [passwordValid, setPasswordValid] = React.useState(false);\n  const correctPassword = '12345';\n  const handleChange = () => {\n    if (passwordValid) {\n      setChecked(prevChecked => !prevChecked);\n      setState(prevChecked => prevChecked ? 'OFF' : 'ON');\n    }\n  };\n  const handlePasswordChange = event => {\n    setPasswordInput(event.target.value);\n  };\n  const validatePassword = () => {\n    if (passwordInput === correctPassword) {\n      setPasswordValid(true);\n    } else {\n      setPasswordValid(false);\n      alert('Invalid Password. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Enter Password to Turn ON\",\n      variant: \"outlined\",\n      value: passwordInput,\n      onChange: handlePasswordChange,\n      disabled: passwordValid,\n      type: \"password\",\n      fullWidth: true,\n      margin: \"normal\",\n      sx: {\n        mb: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: validatePassword,\n      disabled: passwordValid,\n      fullWidth: true,\n      sx: {\n        mb: 2\n      },\n      children: \"Validate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Switch, {\n        checked: checked,\n        onChange: handleChange,\n        color: \"warning\",\n        disabled: !passwordValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this),\n      label: state\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), !checked && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Enter Password to Turn OFF\",\n        variant: \"outlined\",\n        value: passwordInput,\n        onChange: handlePasswordChange,\n        disabled: passwordValid,\n        type: \"password\",\n        fullWidth: true,\n        margin: \"normal\",\n        sx: {\n          mb: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: validatePassword,\n        disabled: passwordValid,\n        fullWidth: true,\n        sx: {\n          mb: 2\n        },\n        children: \"Validate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(ControlledSwitches, \"ftZUHpqOzAj6LMUT9mmGBh0jyd8=\");\n_c = ControlledSwitches;\nexport default ControlledSwitches;\nvar _c;\n$RefreshReg$(_c, \"ControlledSwitches\");","map":{"version":3,"names":["React","Switch","FormControlLabel","TextField","Button","Box","jsxDEV","_jsxDEV","Fragment","_Fragment","ControlledSwitches","_s","checked","setChecked","useState","state","setState","passwordInput","setPasswordInput","passwordValid","setPasswordValid","correctPassword","handleChange","prevChecked","handlePasswordChange","event","target","value","validatePassword","alert","children","label","variant","onChange","disabled","type","fullWidth","margin","sx","mb","fileName","_jsxFileName","lineNumber","columnNumber","onClick","control","color","_c","$RefreshReg$"],"sources":["C:/Projects/React Projects/Dashboard/dashboard/src/components/ControlledSwitches.js"],"sourcesContent":["import React from 'react';\r\nimport Switch from '@mui/material/Switch';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport Box from '@mui/material/Box';\r\n\r\nfunction ControlledSwitches() {\r\n  const [checked, setChecked] = React.useState(false);\r\n  const [state, setState] = React.useState('OFF');\r\n  const [passwordInput, setPasswordInput] = React.useState('');\r\n  const [passwordValid, setPasswordValid] = React.useState(false);\r\n\r\n  const correctPassword = '12345';\r\n\r\n  const handleChange = () => {\r\n    if (passwordValid) {\r\n      setChecked((prevChecked) => !prevChecked);\r\n      setState((prevChecked) => (prevChecked ? 'OFF' : 'ON'));\r\n    }\r\n  };\r\n\r\n  const handlePasswordChange = (event) => {\r\n    setPasswordInput(event.target.value);\r\n  };\r\n\r\n  const validatePassword = () => {\r\n    if (passwordInput === correctPassword) {\r\n      setPasswordValid(true);\r\n    } else {\r\n      setPasswordValid(false);\r\n      alert('Invalid Password. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <TextField\r\n        label=\"Enter Password to Turn ON\"\r\n        variant=\"outlined\"\r\n        value={passwordInput}\r\n        onChange={handlePasswordChange}\r\n        disabled={passwordValid}\r\n        type=\"password\"\r\n        fullWidth\r\n        margin=\"normal\"\r\n        sx={{ mb: 2 }}\r\n      />\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={validatePassword}\r\n        disabled={passwordValid}\r\n        fullWidth\r\n        sx={{ mb: 2 }}\r\n      >\r\n        Validate\r\n      </Button>\r\n      <FormControlLabel\r\n        control={\r\n          <Switch\r\n            checked={checked}\r\n            onChange={handleChange}\r\n            color=\"warning\"\r\n            disabled={!passwordValid}\r\n          />\r\n        }\r\n        label={state}\r\n      />\r\n      {!checked && (\r\n        <>\r\n          <TextField\r\n            label=\"Enter Password to Turn OFF\"\r\n            variant=\"outlined\"\r\n            value={passwordInput}\r\n            onChange={handlePasswordChange}\r\n            disabled={passwordValid}\r\n            type=\"password\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            sx={{ mb: 2 }}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={validatePassword}\r\n            disabled={passwordValid}\r\n            fullWidth\r\n            sx={{ mb: 2 }}\r\n          >\r\n            Validate\r\n          </Button>\r\n        </>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ControlledSwitches;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}